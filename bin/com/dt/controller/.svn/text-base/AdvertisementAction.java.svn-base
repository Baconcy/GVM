package com.jh.controller;

import java.io.File;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Random;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.jh.entity.Advertisement;
import com.jh.service.AdvertisementService;

/**
 * 广告
 * @author wys
 * 2014-3-18
 */
@Controller  
@RequestMapping("/advertisement") 
public class AdvertisementAction {
	

	@Autowired
	private AdvertisementService advertisementService;
	/**
	 * 广告列表
	 * @param modelMap
	 * @param request
	 * @param curPage
	 * @return
	 */
	@RequestMapping(value="list")
	public String list(ModelMap modelMap,HttpServletRequest request,
			@RequestParam(value = "curPage",required=false,defaultValue="0") Integer curPage){ 
		List<Advertisement> list = advertisementService.getAdvertisementList(null);
		Map<String,Advertisement> map = new HashMap<String,Advertisement>();
		if(list != null && list.size() > 0) {
			for(int i = 0 ; i < list.size() ;i++) {
				Advertisement advertisement = (Advertisement)list.get(i);
				map.put("file_"+(i+1), advertisement);
			}
		}
		modelMap.put("map", map);
		return "advertisement/list";   
	}
	
	@RequestMapping(value="saveInfo")
	public String saveInfo(ModelMap modelMap,HttpServletRequest request) { 
		
		try {
			/**
			 * 上传图片
			 */
			String path = "/attached/advertisement/";
			String uploadPath = request.getRealPath(path);
			File file = new File(uploadPath);
			if(!file.isFile()){
				file.mkdirs();
			}
			MultipartHttpServletRequest filerequest = (MultipartHttpServletRequest)request;
			Map<String,MultipartFile> filemap = filerequest.getFileMap();
			if(filemap != null && filemap.size() > 0) {
				// 删除原有文件
				String delStr = "delete from Advertisement ";
				advertisementService.saveOrUpdate(delStr, "HQL");
				
				String pathStr = "";// 带文件夹的文件名
				Iterator<String> iter = filemap.keySet().iterator();
				int i = 0;
			    while (iter.hasNext()) {
			        String key = iter.next();
			        MultipartFile upfile = filemap.get(key);
			        if(upfile!=null && !upfile.isEmpty()) {// 保存更改后的图片
			        	String imgFileName = upfile.getOriginalFilename();
			        	Random rd = new Random();
			        	imgFileName = rd.nextInt(100000000) + imgFileName.substring(imgFileName.lastIndexOf("."),imgFileName.length());
			        	File uploadFile = new File(uploadPath +"/"+ imgFileName);
						FileCopyUtils.copy(upfile.getBytes(), uploadFile);
						pathStr = path + imgFileName ;
						
						Advertisement advertisement = new Advertisement();
						advertisement.setCreatedDate(new Date());
						advertisement.setTitle("");
						advertisement.setMemo(request.getParameterValues("memo")[i]);
						advertisement.setType(Integer.parseInt(request.getParameterValues("type")[i]));
						advertisement.setLinkUrl(request.getParameterValues("linkUrl")[i]);
						advertisement.setPicUrl(pathStr);
						advertisementService.saveInfo(advertisement);
			        }
			        else {// 保存原有未变更的图片
			        	Advertisement advertisement = new Advertisement();
						advertisement.setCreatedDate(new Date());
						advertisement.setTitle("");
						advertisement.setMemo(request.getParameterValues("memo")[i]);
						advertisement.setType(Integer.parseInt(request.getParameterValues("type")[i]));
						advertisement.setLinkUrl(request.getParameterValues("linkUrl")[i]);
						advertisement.setPicUrl(request.getParameterValues("picUrl_text")[i]);
						advertisementService.saveInfo(advertisement);
			        }
			        
			        i++;
			    }
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return "redirect:/advertisement/list.html";   
	}
	

}
