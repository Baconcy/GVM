package com.jh.controller;

import java.io.File;
import java.util.Iterator;
import java.util.Map;
import java.util.Random;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.jh.entity.FileDownload;
import com.jh.entity.RemitInfo;
import com.jh.service.CustomerService;
import com.jh.service.FileDownloadService;
import com.jh.util.Paging;
/**
 * 会员中心管理
 * @author hugo
 * 
 */
@Controller  
@RequestMapping("/customer") 
public class CustomerAction {
	@Autowired
	private  CustomerService custonService;
	@Autowired
	private  FileDownloadService fileDownloadService;
	
	private int pageSize = 10;
	
	/**
	 * 汇款信息 初始化
	 * @param modelMap 
	 * @param request
	 * @return
	 */
	@RequestMapping
	public String load(ModelMap modelMap,HttpServletRequest request){ 
//		Province pro = new Province();
//		pro.setName("000");
//		pro.setOrderCondition(1);
//		cityService.saveOrUpdate(pro);
		RemitInfo bean = custonService.getRemitInfo();
		modelMap.put("remit", bean);
		return "customer/main";   
	}

	/***
	 * 修改银行信息
	 * @param modelMap
	 * @param request
	 * @param remit
	 * @return
	 */
	@RequestMapping(value="changeVipInfo")
	public String changeVipInfo(ModelMap modelMap,HttpServletRequest request,RemitInfo remit){ 
		custonService.changeRemitInfo(remit);
		return "redirect:/customer.html"; 
	}
	
	
	/***
	 * 资料下载列表页
	 * @param modelMap
	 * @param request
	 * @return
	 */
	@RequestMapping("/fileList")
	public String fileList(ModelMap modelMap,HttpServletRequest request){ 
		String fileName = request.getParameter("fileName");
		modelMap.put("fileName", fileName);
		 //当前页面
		String strCurPage  = request.getParameter("curPage");
		int curPage = 0;
		if(StringUtils.isNotEmpty(strCurPage)){
			curPage = Integer.parseInt(strCurPage);
		}
		Paging list = fileDownloadService.getFileDownloadListByPage(fileName,curPage, pageSize);
		modelMap.put("paging", list);
		return "customer/fileList";   
	}
	
	/**
	 * 删除执行文件--资料下载
	 * @param modelMap
	 * @param request
	 * @param id
	 * @return
	 */
	@RequestMapping("/del/{id}") 
	public String del(ModelMap modelMap,HttpServletRequest request,
			@PathVariable("id") Integer id) { 
		
		if(id !=null) {
			String upStr = "update FileDownload set fielType = 3  where fileId="+id+"";
			fileDownloadService.saveOrUpdate(upStr, "HQL");
		}
		
		return "redirect:/customer/fileList.html";   
	}
	

	/***
	 * update
	 * @param modelMap
	 * @param request
	 * @param id
	 * @return
	 */
	@RequestMapping(value="managePage/{id}")
	public String managePage(ModelMap modelMap,HttpServletRequest request,
			@PathVariable("id") Integer id
			) { 
		try {
			if(id!=0){
				FileDownload fileDown = fileDownloadService.getFileDownloadById(id);
				modelMap.put("fileDown", fileDown);
			}else{
				FileDownload fileDown = new FileDownload();
				modelMap.put("fileDown", fileDown);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return "customer/add";
	}
	
	@RequestMapping("/saveInfo") 
	public String saveInfo(ModelMap modelMap,HttpServletRequest request,FileDownload fileDown) { 
		try {
		
			fileDown.setFielType(1);
			/**
			 * 上传图片
			 */
			String path = "/attached/file/";
			String uploadPath = request.getRealPath(path);
			File file = new File(uploadPath);
			if(!file.isFile()){
				file.mkdirs();
			}
			MultipartHttpServletRequest  filerequest = (MultipartHttpServletRequest)request;
			Map<String,MultipartFile> filemap = filerequest.getFileMap();
			if(filemap != null && filemap.size() > 0) {
				String pathStr = "";
				Iterator<String> iter = filemap.keySet().iterator();
			    while (iter.hasNext()) {
			        String key = iter.next();
			        MultipartFile upfile = filemap.get(key);
			        if(upfile!=null && !upfile.isEmpty()) {
			        	String imgFileName = upfile.getOriginalFilename();
			        	Random rd = new Random();
			        	imgFileName = rd.nextInt(100000000) + imgFileName.substring(imgFileName.lastIndexOf("."),imgFileName.length());
			        	File uploadFile = new File(uploadPath +"/"+ imgFileName);
						FileCopyUtils.copy(upfile.getBytes(), uploadFile);
						pathStr = path + imgFileName ;
			        }
			    }
			    if(pathStr != null && !"".equals(pathStr)) {
			    	fileDown.setFileUrl(pathStr);
			    }
			}
			
			String fileId = request.getParameter("fileId");
			if(fileId.equals("") || fileId.equals(null)){
				fileDown.setOrderCondition(fileDownloadService.getFileOrder(1));
			}
			fileDown.setFielType(1);
			fileDownloadService.saveOrUpdate(fileDown);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "redirect:/customer/fileList.html";  
	}
	
	
	/***
	 * 供应商入会指南列表页
	 * @param modelMap
	 * @param request
	 * @return
	 */
	@RequestMapping("/joinList")
	public String joinList(ModelMap modelMap,HttpServletRequest request){ 

		String fileName = request.getParameter("fileName");
		modelMap.put("fileName", fileName);
		 //当前页面
		String strCurPage  = request.getParameter("curPage");
		int curPage = 0;
		if(StringUtils.isNotEmpty(strCurPage)){
			curPage = Integer.parseInt(strCurPage);
		}
		Paging list = fileDownloadService.getFileDownloadListByJoinPage(fileName,curPage, pageSize);
		modelMap.put("paging", list);
		
		return "customer/joinList";   
	}
	
	/**
	 * 删除执行文件--资料下载
	 * @param modelMap
	 * @param request
	 * @param id
	 * @return
	 */
	@RequestMapping("/delJoin/{id}") 
	public String delJoin(ModelMap modelMap,HttpServletRequest request,
			@PathVariable("id") Integer id) { 
		
		if(id !=null) {
			String upStr = "update FileDownload set fielType = 3  where fileId="+id+"";
			fileDownloadService.saveOrUpdate(upStr, "HQL");
		}
		
		return "redirect:/customer/joinList.html";   
	}
	
	@RequestMapping(value="managePageJoin/{id}")
	public String managePageJoin(ModelMap modelMap,HttpServletRequest request,
			@PathVariable("id") Integer id
			) { 
		try {
			if(id!=0){
				FileDownload fileDown = fileDownloadService.getFileDownloadById(id);
				modelMap.put("fileDown", fileDown);
			}else{
				FileDownload fileDown = new FileDownload();
				modelMap.put("fileDown", fileDown);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return "customer/addJoin";
	}
	
	@RequestMapping(value="saveInfoJoin")
	public String saveInfoJoin(ModelMap modelMap,HttpServletRequest request,FileDownload fileDown) { 
		try{
			fileDown.setFielType(2);
			/**
			 * 上传图片
			 */
			String path = "/attached/file/";
			String uploadPath = request.getRealPath(path);
			File file = new File(uploadPath);
			if(!file.isFile()){
				file.mkdirs();
			}
			MultipartHttpServletRequest  filerequest = (MultipartHttpServletRequest)request;
			Map<String,MultipartFile> filemap = filerequest.getFileMap();
			if(filemap != null && filemap.size() > 0) {
				String pathStr = "";
				Iterator<String> iter = filemap.keySet().iterator();
			    while (iter.hasNext()) {
			        String key = iter.next();
			        MultipartFile upfile = filemap.get(key);
			        if(upfile!=null && !upfile.isEmpty()) {
			        	String imgFileName = upfile.getOriginalFilename();
			        	Random rd = new Random();
			        	imgFileName = rd.nextInt(100000000) + imgFileName.substring(imgFileName.lastIndexOf("."),imgFileName.length());
			        	File uploadFile = new File(uploadPath +"/"+ imgFileName);
						FileCopyUtils.copy(upfile.getBytes(), uploadFile);
						pathStr = path + imgFileName ;
			        }
			    }
			    if(pathStr != null && !"".equals(pathStr)) {
			    	fileDown.setFileUrl(pathStr); 
			    	
			    }
			}
			
			String fileId = request.getParameter("fileId");
			if(fileId.equals("") || fileId.equals(null)){
				fileDown.setOrderCondition(fileDownloadService.getFileOrder(2));
			}
			fileDown.setFielType(2);
			fileDownloadService.saveOrUpdate(fileDown);
		} catch (Exception e) {
			e.printStackTrace();
		}
		fileDownloadService.saveOrUpdate(fileDown);
		return "redirect:/customer/joinList.html";  
	}
	
	
}
