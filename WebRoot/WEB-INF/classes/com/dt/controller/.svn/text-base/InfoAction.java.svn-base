package com.jh.controller;

import java.io.File;
import java.util.Date;
import java.util.Iterator;
import java.util.Map;
import java.util.Random;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.jh.entity.Company;
import com.jh.entity.Info;
import com.jh.entity.Province;
import com.jh.entity.SystemUser;
import com.jh.service.InfoService;
import com.jh.util.DateUtil;
import com.jh.util.Paging;
import com.jh.util.StringUtil;

/**
 * 标书管理 
 * @author 
 */
@Controller  
@RequestMapping("/info")  
public class InfoAction {

	@Autowired
	private InfoService infoService;
	private int pageSize = 10;
	
	/**
	 * 标书列表
	 * @param modelMap
	 * @param request
	 * @param curPage
	 * @return
	 */
	@RequestMapping(value="list")
	public String list(ModelMap modelMap,HttpServletRequest request,
			@RequestParam(value = "curPage",required=false,defaultValue="0") Integer curPage){ 
		
		try {
			// 行业
			String strInfoType = request.getParameter("infoTypeId");
			// 性质
			String infoProperty = request.getParameter("infoProperty");
			// 省份CODE
			String province = request.getParameter("province");
			// 查询截止时间
			String endTime = request.getParameter("endTime");
			// 查询关键字
			String queryWord = request.getParameter("queryWord");
			/**
			 * 时间进行处理
			 */
			if(StringUtils.isNotEmpty(endTime)) {
				modelMap.put("endTime", endTime);
				if(endTime.equals("WW")) {// 近一周
					endTime = DateUtil.format(DateUtil.addDate(new Date(), -7, "D"));
				}
				else if(endTime.equals("MM")) {// 近一月
					endTime = DateUtil.format(DateUtil.addDate(new Date(), -1, "M"));
				}
				else if(endTime.equals("TMM")) {// 近三月
					endTime = DateUtil.format(DateUtil.addDate(new Date(), -3, "M"));
				}
				else if(endTime.equals("YY")) {// 近一年
					endTime = DateUtil.format(DateUtil.addDate(new Date(), -1, "Y"));
				}
				// System.out.println("======"+endTime);
			}
			modelMap.put("infoTypeId", strInfoType);
			modelMap.put("infoProperty", infoProperty);
			modelMap.put("province", province);
			modelMap.put("queryWord", queryWord);
			
			if(StringUtils.isNotEmpty(queryWord) && !"".equals(queryWord)) {// 关键字
				queryWord = StringUtil.replaceStr(queryWord);// 防止查询中带'报错
			}
			if(curPage == null) {
				curPage = 0;
			}
			Paging paging = infoService.pageInfoPaging(queryWord, strInfoType, infoProperty, province, endTime, curPage, pageSize);
			modelMap.put("paging", paging);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
		
		return "info/list";   
	}

	@RequestMapping(value="managePage/{id}")
	public String managePage(ModelMap modelMap,HttpServletRequest request,
			@PathVariable("id") Integer id
			) { 
		try {
			if(id != null && id.intValue() != 0) {
				Info info = infoService.getInfo(id);
				modelMap.put("info", info);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return "info/add";
	}
	/**
	 * 删除
	 * @param modelMap
	 * @param request
	 * @param id
	 * @return
	 */
	@RequestMapping("/del/{id}") 
	public String del(ModelMap modelMap,HttpServletRequest request,
			@PathVariable("id") Integer id) { 
		
		if(id !=null) {
			String upStr = "update Info set status = 2  where id="+id+"";
			infoService.saveOrUpdate(upStr, "HQL");
		}
		
		return "redirect:/info/list.html";   
	}
	
	/**
	 * 保存
	 * @param modelMap
	 * @param request
	 * @param id
	 * @return
	 */
	@RequestMapping("/saveInfo") 
	public String saveInfo(ModelMap modelMap,HttpServletRequest request,Info info) { 
		String buyStartDateInput = request.getParameter("buyStartDateInput");// 开始时间
		String buyEndDateInput = request.getParameter("buyEndDateInput");// 结束时间
		
		try {
			if(info != null) {
				SystemUser user = (SystemUser)request.getSession().getAttribute("systemUser");
				if(buyStartDateInput != null && !"".equals(buyStartDateInput)) {
					info.setBuyStartDate(DateUtil.parse(buyStartDateInput,DateUtil.FORMAT_SHORT));
				}
				if(buyEndDateInput != null && !"".equals(buyEndDateInput)) {
					info.setBuyEndDate(DateUtil.parse(buyEndDateInput,DateUtil.FORMAT_SHORT));
				}
				if(info.getProvince() != null) {
					Province province = (Province)infoService.getObjectById(Province.class, info.getProvince().getCode());
					info.setProvince(province);
				}
				if(info.getPublicCompany() != null) {
					Company company = (Company)infoService.getObjectById(Company.class, info.getPublicCompany().getCompanyId());
					info.setPublicCompany(company);
				}
				// info.setStatus(0);
				info.setViews(1);
				/**
				 * 上传图片
				 */
				String path = "/attached/info/";
				String uploadPath = request.getRealPath(path);
				File file = new File(uploadPath);
				if(!file.isFile()){
					file.mkdirs();
				}
				MultipartHttpServletRequest filerequest = (MultipartHttpServletRequest)request;
				Map<String,MultipartFile> filemap = filerequest.getFileMap();
				if(filemap != null && filemap.size() > 0) {
					String pathStr = "";// 带文件夹的文件名
					String filename = "";// 原有文件名
					Iterator<String> iter = filemap.keySet().iterator();
				    while (iter.hasNext()) {
				        String key = iter.next();
				        MultipartFile upfile = filemap.get(key);
				        if(upfile!=null && !upfile.isEmpty()) {
				        	String imgFileName = upfile.getOriginalFilename();
				        	filename = imgFileName;
				        	Random rd = new Random();
				        	imgFileName = rd.nextInt(100000000) + imgFileName.substring(imgFileName.lastIndexOf("."),imgFileName.length());
				        	File uploadFile = new File(uploadPath +"/"+ imgFileName);
							FileCopyUtils.copy(upfile.getBytes(), uploadFile);
							pathStr = path + imgFileName ;
				        }
				    }
				    if(pathStr != null && !"".equals(pathStr)) {
				    	info.setInfoUrl(pathStr);
				    }
				    if(filename != null && !"".equals(filename)) {
				    	info.setInfoFileName(filename);
				    }
				    if(info.getInfoUrl() == null) {
				    	info.setInfoUrl("");
				    }
				    if(info.getInfoFileName() == null) {
				    	info.setInfoFileName("");
				    }
				    
				   
				}
				info.setPublicTime(new Date());
				info.setPublicUser(user.getFullName());
				
				infoService.saveInfo(info);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return "redirect:/info/list.html";     
	}
	
	/**
	 * 报价查看
	 * @param modelMap
	 * @param request
	 * @param curPage
	 * @return
	 */
	@RequestMapping(value="bjlist")
	public String bjlist(ModelMap modelMap,HttpServletRequest request,
			@RequestParam(value = "curPage",required=false,defaultValue="0") Integer curPage) { 
		
		try {
			// 行业
			String strInfoType = request.getParameter("infoTypeId");
			// 性质
			String infoProperty = request.getParameter("infoProperty");
			// 省份CODE
			String province = request.getParameter("province");
			// 查询截止时间
			String endTime = request.getParameter("endTime");
			// 查询关键字
			String queryWord = request.getParameter("queryWord");
			/**
			 * 时间进行处理
			 */
			if(StringUtils.isNotEmpty(endTime)) {
				modelMap.put("endTime", endTime);
				if(endTime.equals("WW")) {// 近一周
					endTime = DateUtil.format(DateUtil.addDate(new Date(), -7, "D"));
				}
				else if(endTime.equals("MM")) {// 近一月
					endTime = DateUtil.format(DateUtil.addDate(new Date(), -1, "M"));
				}
				else if(endTime.equals("TMM")) {// 近三月
					endTime = DateUtil.format(DateUtil.addDate(new Date(), -3, "M"));
				}
				else if(endTime.equals("YY")) {// 近一年
					endTime = DateUtil.format(DateUtil.addDate(new Date(), -1, "Y"));
				}
				// System.out.println("======"+endTime);
			}
			modelMap.put("infoTypeId", strInfoType);
			modelMap.put("infoProperty", infoProperty);
			modelMap.put("province", province);
			modelMap.put("queryWord", queryWord);
			
			if(StringUtils.isNotEmpty(queryWord) && !"".equals(queryWord)) {// 关键字
				queryWord = StringUtil.replaceStr(queryWord);// 防止查询中带'报错
			}
			if(curPage == null) {
				curPage = 0;
			}
			Paging paging = infoService.pageInfoOfferPaging(queryWord, strInfoType, infoProperty, province, endTime, curPage, pageSize);
			modelMap.put("paging", paging);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return "info/offerlist";   
	}
	/**
	 * 删除报价
	 * @param modelMap
	 * @param request
	 * @param id
	 * @return
	 */
	@RequestMapping("/deloffer/{id}") 
	public String deloffer(ModelMap modelMap,HttpServletRequest request,
			@PathVariable("id") Integer id) { 
		
		if(id !=null) {
			String upStr = "delete InfoOffer where id="+id+"";
			infoService.saveOrUpdate(upStr, "HQL");
		}
		
		return "redirect:/info/bjlist.html";   
	}
	
	
}
